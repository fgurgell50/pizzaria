Pode também deixar seu script start apenas para fazer compilar e dar o start, deixando ele assim:
"dev": "ts-node-dev --transpile-only src/server.ts"

npm run dev

1) npm init
2) npm i express
3) npm i @types/express -D
3.5) npm i typescript -D
4) npm tsc --init - esse está errado
5) npx tsc --init - esse inicia o typescrit e gera p arquivo tsconfig.json
6) npm i ts-node-dev -D
7) realizar a alteracao - depois da License
"scripts": {
    "dev": "ts-node-dev src/server.ts"
  },
8) npm run dev - para executar

Foi criado primeiro o arq server.ts e depois o routes.ts

9) npm i express-async-errors - tratamento de erros

10) liberar para qqr IP possa fazer a requisicao, instalar : npm i cors 

11) npm i --save-dev@types/cors

postgresql
senha: admin

Postbird
username: postgresql
senha: admin
database: pizzaria

12) npm i prisma
13) npm install @prisma/client
14) npx prisma init


depois de criar os models em schema.prisma
npx prisma migrate dev
create-models-pizzaria

15) paea criptograr a senha , instalar:
npm i bcryptjs
npm i @types/bcryptjs -D

npm uninstall @types/bcryptjs

16) instalar o JWT
npm i jsonwebtoken

17) npm i @types/jsonwebtoken -D

18) #Secret JWT https://www.md5hashgenerator.com/
#	projetosujeitopizzaria
JWT_SECRET=98388750f63fac47136942aaf8ac79ce

19) npm i dotenv

20)  alterar "strict": false,     no arquivo tsconfig.json

21) trabalhar com img - npm i multer & npm i @types/multer -D ( ambiente de dSV )

Front end
criar a aplicacao 
npx create-next-app frontend - apenas habilitar typescript

criar uma pasta src 
colocar pages dentro de src
